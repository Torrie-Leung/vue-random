{"remainingRequest":"C:\\Users\\DELL\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\TorrieL\\draftAshes\\vue-notknow\\InputDirective.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\TorrieL\\draftAshes\\vue-notknow\\InputDirective.vue","mtime":1565774791805},{"path":"C:\\Users\\DELL\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\DELL\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DELL\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'InputDirective',\r\n  data (){\r\n    return {\r\n      msg:'hey',\r\n      direction: 'left',\r\n      custom:{direction:'left',color:'khaki'}\r\n      \r\n    }\r\n  },\r\n  directives:{\r\n    focus: {\r\n      //called when the bound element has been inserted into its parent node\r\n      inserted: function(el){\r\n        el.focus()\r\n      }\r\n    },\r\n    demo: {\r\n      //called only once,do one time setup work\r\n      bind: function(el,binding,vnode){\r\n        const s = JSON.stringify\r\n        //console.log(el,binding,vnode)\r\n        el.innerHTML = \r\n        'name:'+s(binding.name)+'<br>'+\r\n        'value: ' + s(binding.value) + '<br>' +\r\n        'expression: ' + s(binding.expression) + '<br>' +\r\n        'argument: '   + s(binding.arg) + '<br>' +\r\n        'modifiers: '  + s(binding.modifiers) + '<br>' +\r\n        'vnode keys: ' + Object.keys(vnode).join(', ')\r\n      }\r\n    },\r\n    pin:{\r\n      bind: function(el,binding,vnode){\r\n        el.style.position = 'fixed'\r\n        el.style.top = binding.value + 'px'\r\n      }\r\n    },\r\n    pinn:{\r\n      bind: function(el,binding,vnode){\r\n        el.style.position = 'fixed'\r\n        //console.log(binding.arg.color)\r\n        const s = (binding.arg.direction == 'left' ? 'left' : 'top')\r\n        el.style[s] = binding.value + 'px'\r\n        //console.log(el.style)\r\n        el.style.color = binding.arg.color\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["InputDirective.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InputDirective.vue","sourceRoot":".","sourcesContent":["<template>\r\n  <div id=\"#app4\">\r\n    <input type=\"text\" v-focus>\r\n    <div id=\"hook-eg\" v-demo:foo.a.b=\"msg\"></div>\r\n\r\n    <div id=\"base-eg\">\r\n      <p>Scroll down the page</p>\r\n      <p v-pin=\"400\">Stick me 400px from the top of the page</p>\r\n      <p v-pinn:[custom]=\"300\">I am pinned onto the page at 300px to the left.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'InputDirective',\r\n  data (){\r\n    return {\r\n      msg:'hey',\r\n      direction: 'left',\r\n      custom:{direction:'left',color:'khaki'}\r\n      \r\n    }\r\n  },\r\n  directives:{\r\n    focus: {\r\n      //called when the bound element has been inserted into its parent node\r\n      inserted: function(el){\r\n        el.focus()\r\n      }\r\n    },\r\n    demo: {\r\n      //called only once,do one time setup work\r\n      bind: function(el,binding,vnode){\r\n        const s = JSON.stringify\r\n        //console.log(el,binding,vnode)\r\n        el.innerHTML = \r\n        'name:'+s(binding.name)+'<br>'+\r\n        'value: ' + s(binding.value) + '<br>' +\r\n        'expression: ' + s(binding.expression) + '<br>' +\r\n        'argument: '   + s(binding.arg) + '<br>' +\r\n        'modifiers: '  + s(binding.modifiers) + '<br>' +\r\n        'vnode keys: ' + Object.keys(vnode).join(', ')\r\n      }\r\n    },\r\n    pin:{\r\n      bind: function(el,binding,vnode){\r\n        el.style.position = 'fixed'\r\n        el.style.top = binding.value + 'px'\r\n      }\r\n    },\r\n    pinn:{\r\n      bind: function(el,binding,vnode){\r\n        el.style.position = 'fixed'\r\n        //console.log(binding.arg.color)\r\n        const s = (binding.arg.direction == 'left' ? 'left' : 'top')\r\n        el.style[s] = binding.value + 'px'\r\n        //console.log(el.style)\r\n        el.style.color = binding.arg.color\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"]}]}